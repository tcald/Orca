//--------------------------------------------------------
// ORHVcRIOModel
// Created by Mark  A. Howe on Oct 17, 2017
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2017, University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of
//North Carolina sponsored in part by the United States
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020.
//The University has certain rights in the program pursuant to
//the contract and the program should not be copied or distributed
//outside your organization.  The DOE and the University of
//North Carolina reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty,
//express or implied, or assume any liability or responsibility
//for the use of this software.
//-------------------------------------------------------------

#pragma mark ***Imported Files
#import "ORAdcProcessing.h"

@class ORTimeRate;
@class ORSafeQueue;
@class NetSocket;

#define kVesselVoltageSetPt            @"kVesselVoltageSetPt"
#define kPostRegulationScaleFactor     @"kPostRegulationScaleFactor"
#define kPowerSupplyOffset             @"kPowerSupplyOffset"
#define kHVcRIORecordSize 9
#define kHVcRIOMainSpecMaxVoltage 33000.0
#define kHVcRIOMainSpecRampSpeed    100.0
#define kHVcRIOIECommonMaxVoltage   500.0
#define kHVcRIOSteepConeMaxVoltage  300.0
#define kHVcRIOPostRegOffVoltage      4.9
#define kHVcRIOScaleFactorMin      6980.0
#define kHVcRIOScaleFactorMax      7020.0
#define kHVcRIOPreSpecMaxVoltage  35000.0
#define kHVcRIOPostRegPrecisionMin    0.25
#define kHVcRIOPostRegPrecisionMax    1.0
#define kHVcRIOPostRegAPRPrecisionMin 0.02
#define kHVcRIOPostRegPIDMaxVoltage  20.0

@interface ORHVcRIOModel : OrcaObject <ORAdcProcessing>
{
    @private
        NSString*           ipAddress;
        BOOL                isConnected;
        NetSocket*          socket;
        BOOL                wasConnected;
  
		NSString*			lastRequest;
		ORSafeQueue*		cmdQueue;
		NSMutableString*    buffer;

		NSString*			setPointFile;
        NSMutableArray*     measuredValues;
        NSMutableArray*     setPoints;
        NSMutableArray*     postRegulationArray;
        NSString*           postRegulationFile;
        NSMutableDictionary* shipValueDictionary;
        NSDictionary*        spIndexDictionary;
        NSDictionary*        mvIndexDictionary;

        BOOL                expertPCControlOnly;
        BOOL                zeusHasControl;
        BOOL                orcaHasControl;
        BOOL                verbose;
        NSMutableString*    stringBuffer;
        BOOL                showFormattedDates;
        int                 pollTime;
        uint32_t            dataId;
        BOOL                breakRampLoops;
        BOOL                mainSpecRamping;
        BOOL                mainSpecRampSuccess;
        BOOL                mainSpecPostRegRamping;
        BOOL                mainSpecPostRegAPRRamping;
        BOOL                scaleFactorEstimating;
        double              postRegPrecision;
        double              postRegAPRPrecision;
        double              postRegAPRTimeout;
        double              postRegDefSF;
        int                 postRegConfig;
        BOOL                postRegEnabled;
        BOOL                postRegAPREnabled;
        bool                ieSAPmode;
        double              vmScaleFactor;
}

#pragma mark ***Initialization
- (id) init;
- (void) dealloc;
- (NSString*) commonScriptMethods;

#pragma mark ***Accessors
- (int)  pollTime;
- (void) setPollTime:(int)aPollTime;
- (id) setPointItem:(int)i forKey:(NSString*)aKey;
- (id) measuredValueItem:(int)i forKey:(NSString*)aKey;
- (void) setSetPoint: (int)aIndex withValue: (double)value;
- (void) setSetPointReadback: (int)aIndex withValue: (double)value;
- (id) setPointAtIndex:(int)i;
- (id) setPointReadBackAtIndex:(int)i;
- (id) measuredValueAtIndex:(int)i;
- (NetSocket*) socket;
- (void) setSocket:(NetSocket*)aSocket;
- (NSString*) ipAddress;
- (void) setIpAddress:(NSString*)aIpAddress;
- (BOOL) isConnected;
- (void) setIsConnected:(BOOL)aFlag;
- (void) writeCmdString:(NSString*)aCommand;
- (void) parseString:(NSString*)theString;
- (void) connect;
- (void) setVerbose:(BOOL)aState;
- (BOOL) verbose;
- (void) setShowFormattedDates:(BOOL)aState;
- (BOOL) showFormattedDates;
- (void) shipRecords;
- (void) checkShipValueDictionary;
- (double) vmScaleFactor;
- (void) setVMScaleFactor:(double)sf;

- (NSString*) title;

- (NSString*) setPointFile;
- (void) setSetPointFile:(NSString*)aPath;
- (NSString*) lastRequest;
- (void) setLastRequest:(NSString*)aRequest;
- (NSUInteger) queCount;
- (BOOL) isBusy;
- (void) flushQueue;
- (void) createSetPointArray;
- (NSInteger) numSetPoints;
- (void) createMeasuredValueArray;
- (NSUInteger) numMeasuredValues;
- (BOOL) expertPCControlOnly;
- (BOOL) zeusHasControl;
- (BOOL) orcaHasControl;

- (NSString*) postRegulationFile;
- (void) setPostRegulationFile:(NSString*)aPath;
- (void) addPostRegulationPoint;
- (void) removePostRegulationPointAtIndex:(int)anIndex;
- (void) removeAllPostRegulationPoints;
- (void) setPostRegulationArray:(NSMutableArray*)anArray;
- (uint32_t) numPostRegulationPoints;
- (id) postRegulationPointAtIndex:(int)anIndex;
- (NSString*)measuredValueName:(NSUInteger)anIndex;

#pragma mark ***Commands
- (void) writeSetpoints;
- (void) readBackSetpoints;
- (void) readMeasuredValues;

- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;
- (void) readPostRegulationFile:(NSString*) aPath;
- (void) savePostRegulationFile:(NSString*) aPath;
- (void) readSetPointsFile:(NSString*) aPath;
- (void) saveSetPointsFile:(NSString*) aPath;
- (void) pushReadBacksToSetPoints;

#pragma mark •••Scripting Convenience Methods
- (double) vesselVoltageSetPoint:(int)anIndex;
- (double) postRegulationScaleFactor:(int)anIndex;
- (double) powerSupplyOffset:(int)anIndex;
- (void)   setPostRegulationScaleFactor:(int)anIndex withValue:(double)aValue;
- (void)   setPowerSupplyOffset:(int)anIndex withValue:(double)aValue;
- (void)   setVesselVoltageSetPoint:(int)anIndex withValue:(double)aValue;

- (int) spIndex:(NSString*)key;
- (int) mvIndex:(NSString*)key;
- (double) readK35Voltage;
- (double) readMainSpecVesselVoltage;
- (double) readMainSpecVesselSetVoltage;
- (double) readMainSpecVesselCurrentLimit;
- (double) readMainSpecVesselCurrent;
- (double) readMainSpecElectrodeVoltage;
- (double) readMainSpecElectrodeSetVoltage;
- (double) readIeCommonVoltage;
- (double) readPostRegSetVoltage;
- (double) readSteepConesWestVoltage;
- (double) readSteepConesEastVoltage;
- (double) readVesselVoltage;
- (double) readPreSpecVesselVoltage;
- (double) readPreSpecIeVoltage:(int)anIndex;
- (double) readPreSpecSouthConeVoltage;
- (double) readPreSpecNorthConeVoltage;
- (double) readPreSpecWireElectrodeVoltage;
- (double) readPostRegPIDVoltage;
- (BOOL)   readPostRegPIDStatus;
- (double) postRegPrecision;
- (double) postRegAPRPrecision;
- (double) postRegAPRTimeout;
- (double) postRegDefSF;
- (int) postRegConfig;
- (BOOL) postRegEnabled;
- (BOOL) postRegAPREnabled;
- (BOOL) ieSAPmode;

- (void) updateVesselVoltage:(NSMutableDictionary*)dict;
- (void) setMainSpecSupplyVoltage:(double)value;
- (void) setIeCommonVoltage:(double)value;
- (void) setSteepConesVoltage:(double)value;
- (void) setPostRegVoltage:(double)value;
- (void) setPreSpecVesselVoltage:(double)value;
- (void) setPreSpecIeVoltage:(double)value withIndex:(int)anIndex;
- (void) setPreSpecSouthConeVoltage:(double)value;
- (void) setPreSpecNorthConeVoltage:(double)value;
- (void) setPreSpecWireElectrodeVoltage:(double)value;
- (BOOL) setPostRegPIDVoltage:(double)value;
- (void) setPostRegPIDStatus:(BOOL)status;
- (void) setPostRegPrecision:(double)value;
- (void) setPostRegAPRPrecision:(double)value;
- (void) setPostRegAPRTimeout:(double)value;
- (void) setPostRegDefSF:(double)value;
- (void) setPostRegConfig:(int)value;
- (void) setPostRegEnabled:(BOOL)enable;
- (void) setPostRegAPREnabled:(BOOL)enable;
- (void) setIeSAPmode:(BOOL)enable;
- (void) setBreakRampLoops:(NSNumber*)value;

- (void) turnOffPostReg;
- (void) turnOffHV;
- (void) turnOffPreSpec;

- (int) getSupplyOffset:(double)voltage forConfig:(int)config;
- (double) scaleFactorCheck:(double)value;
- (void) updateScaleFactor:(NSMutableDictionary*)dict;
- (double) getPostRegulationScaleFactor:(double)voltage;
- (void) estimateScaleFactorPostReg:(double)voltage withDefault:(double)defSF supplyOffset:(int)offset;
- (void) setPostRegulation:(double)voltage scaleFactor:(double)sf supplyOffset:(double)offset;
- (void) updateVesselVoltageWithPostReg:(NSDictionary*)dict;
- (void) updateVesselVoltageWithPostRegAPR:(NSDictionary*)dict;
- (void) setVesselVoltageWithPostReg:(double)voltage scaleFactor:(double)sf supplyOffset:(int)offset;
- (void) setVesselVoltageWithPostReg:(double)voltage precision:(double)precision config:(int)config;
- (void) setVesselVoltageWithoutPostReg:(double)voltage;

- (uint32_t) dataId;
- (void) setDataId: (uint32_t) DataId;
- (void) setDataIds:(id)assigner;
- (void) syncDataIdsWith:(id)anotherLakeShore210;
- (void) appendDataDescription:(ORDataPacket*)aDataPacket userInfo:(NSDictionary*)userInfo;
- (NSDictionary*) dataRecordDescription;

#pragma mark •••Adc or Bit Processing Protocol
- (void)processIsStarting;
- (void)processIsStopping;
- (void) startProcessCycle;
- (void) endProcessCycle;
- (BOOL) processValue:(int)channel;
- (NSString*) processingTitle;
- (double) convertedValue:(int)channel;
- (double) maxValueForChan:(int)channel;
- (double) minValueForChan:(int)channel;
- (void) getAlarmRangeLow:(double*)theLowLimit high:(double*)theHighLimit  channel:(int)channel;
@end

@interface NSObject (ORHistModel)
- (void) removeFrom:(NSMutableArray*)anArray;
@end

extern NSString* ORHVcRIOLock;
extern NSString* ORHVcRIOModelSetPointChanged;
extern NSString* ORHVcRIOModelQueCountChanged;
extern NSString* ORHVcRIOModelReadBackChanged;
extern NSString* ORHVcRIOModelIsConnectedChanged;
extern NSString* ORHVcRIOModelIpAddressChanged;
extern NSString* ORHVcRIOModelSetPointsChanged;
extern NSString* ORHVcRIOModelMeasuredValuesChanged;
extern NSString* ORHVcRIOModelSetPointFileChanged;
extern NSString* ORHVcRIOModelVerboseChanged;
extern NSString* ORHVcRIOModelShowFormattedDatesChanged;
extern NSString* ORHVcRIOModelPostRegulationFileChanged;
extern NSString* ORHVcRIOModelPostRegulationPointAdded;
extern NSString* ORHVcRIOModelPostRegulationPointRemoved;
extern NSString* ORHVcRIOModelUpdatePostRegulationTable;
extern NSString* ORHVcRIOModelPollTimeChanged;
extern NSString* ORHVcRIOModelMainSpecRamping;
extern NSString* ORHVcRIOModelMainSpecPostRegRamping;
extern NSString* ORHVcRIOModelMainSpecPostRegAPRRamping;
extern NSString* ORHVcRIOModelMainSpecRampSuccess;
extern NSString* ORHVcRIOModelMainSpecRampFailure;
extern NSString* ORHVcRIOModelEstimatingScaleFactor;
extern NSString* ORHVcRIOModelPostRegPrecisionChanged;
extern NSString* ORHVcRIOModelPostRegAPRPrecisionChanged;
extern NSString* ORHVcRIOModelPostRegAPRTimeoutChanged;
extern NSString* ORHVcRIOModelPostRegConfigChanged;
extern NSString* ORHVcRIOModelPostRegDefSFChanged;
extern NSString* ORHVcRIOModelPostRegEnabledChanged;
extern NSString* ORHVcRIOModelPostRegAPREnabledChanged;
extern NSString* ORHVcRIOModelIESAPModeChanged;
extern NSString* ORHVcRIOModelVMScaleFactorChanged;

@interface PostRegulationPoint : NSObject
{
    NSMutableDictionary* data;
}
+ (id) postRegulationPoint;
- (void) setValue:(id)anObject forKey:(id)aKey;
- (id) objectForKey:(id)aKey;
- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;


@property   (retain) NSMutableDictionary* data;
@end

